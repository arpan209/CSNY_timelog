@model CSNY_timelog.ViewModel.RegistrationViewModel    

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.password-strength.js")" type="text/javascript"></script>
<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>

<script type="text/javascript">
    function validation() {
        var error = "";
        var error1 = "";


        //Client side validation

        var go = "";
        var checkterms = "";
        //var Name = document.getElementById('Checkterms').checked;

        if (document.getElementById('FirstName').value == "") {
            error += "Please enter first name.\r\n<br/> ";
        }
        if (document.getElementById('LastName').value == "") {
            error += "Please enter last name.\r\n<br/> ";
        }
        if (document.getElementById('Address1').value == "") {
            error += "Please enter address 1.\r\n<br/> ";
        }

       
        if (document.getElementById('Phone').value == "") {
            error += "Please enter phone number.\r\n<br/> ";
        }


        var a = document.getElementById("StateName");
        var StateName = a.options[a.selectedIndex].text;


        if (StateName == "" || StateName == "--Select State--") {
            error += "Please select a state.\r\n<br/>";
        }


        var e = document.getElementById("City");
        var City = e.options[e.selectedIndex].text;

        if ( City == "" || City == null) {
            error += "Please select a City.\r\n<br/>";
        }
        var EMail = document.getElementById('Email').value.trim();
      //  var EMail1 = document.getElementById('ConfirmEmail').value.trim();
        if (EMail == "") {
            error += "Please Enter Email Address.\n <br>";
        }
        else {
            var atpos = EMail.indexOf("@@");
            var dotpos = EMail.lastIndexOf(".");

            if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= EMail.length) {
                error += "Invalid email address.\n <br>";
            }
            else {
                var namevalidtext = document.getElementById('msg').innerHTML;
                if (namevalidtext == "*Already Used") {
                    error += "Please Enter Another Email Address.\n<br>";
                }
            }
        }

        


        

       
        if (error != "") {
            alert(error);
            return false;
        }
        else {


            var OrderViewModel =
                {
                    FirstName: $('#FirstName').val(), LastName: $('#LastName').val(),
                    Address1: $('#Address1').val(), Address2: $('#Address2').val(),
                    StateName: StateName, City: City, Phone: $('#Phone').val(),
                    Email: $('#Email').val(), SSN: $('#SSN').val(), IsActive: $('#IsActive').val()
                };

            $.ajax({
                type: "POST",

                url: '@Url.Content("~/Account/edit_profile")',
                // url: "/admin/show_find_user_detail",
                async: false,
                data: JSON.stringify(OrderViewModel),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    if (data == "success") {
                       // alert("Profile Updated succesfully");
                        return false;
                    }
                  
                    },
                error: function (data) {
                    //  alert(data);
                }

            });
            }
        }

        function OnChange(txt) {
            $("#errormsg")[0].innerHTML = "";
        }

        function CheckUserNameAvailability() {
            var Name = document.getElementById('UserName').value.toLowerCase();
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Account/CheckUserNameAvailable")',
            data: '{userName: "' + Name + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "json",

            success: function (response) {
                var mesg = $("#msg1")[0];
                if (response == 0) {
                    if (Name == "") {
                        mesg.style.color = "red";
                        mesg.innerHTML = "*Please Enter User Name";
                    }
                    else {
                        mesg.style.color = "green";
                        mesg.innerHTML = "*Available";
                    }
                }
                else {
                    mesg.style.color = "red";
                    mesg.innerHTML = "*Already Used";
                }
            },
            failure: function (response) {
                alert(response);
            }
        });
    }
    function OnChange(txt) {
        $("#msg1")[0].innerHTML = "";
    }
    function CheckEmailAvailability() {
        var name = document.getElementById('Email').value.toLowerCase();
        if (name == "") {
            $("#msg").html("Please Enter email address");
            $("#msg").css("color", "red");

        }
        else {
            var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            if (!filter.test(name)) {
                $("#msg").html("*Please provide a valid email address");
                $("#msg").css("color", "red");

            }
            else {
                $.ajax({
                    type: "POST",
                    url: '@Url.Content("~/Account/CheckEMailAvailable")',
                    data: '{Email: "' + name + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        var msg = $("#msg")[0];
                        if (response == 0) {
                            msg.style.color = "green";
                            msg.innerHTML = "*Available";
                        }
                        else {
                            msg.style.color = "red";
                            msg.innerHTML = "*Already Used";
                        }
                    },
                    failure: function (response) {
                        alert(response);
                    }
                });
            }
        }
    }

    function OnChange(txt) {
        $("#msg")[0].innerHTML = "";
    }

    function onSelectedIndexChanged() {
        var selectedVal = $("#StateName").val();

        $.ajax({
            type: "POST",
            url: '@Url.Content("~/Account/GetCitiesShow")',
            data: '{StateName: "' + selectedVal + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var markup = "<option value=''>Select City</option>";
                for (var x = 0; x < data.length; x++) {

                    markup += "<option value=" + data[x].Text + ">" + data[x].Text + "</option>";
                }
                $('#City').html(markup).show();
            },
            error: function () {

            }
        });

    }

    function onSelectedIndexChangedcity() {

        var NoticeSelect = document.getElementById("City");
        var selectedVal = NoticeSelect.options[NoticeSelect.selectedIndex].text;



        $.ajax({
            type: "POST",
            url: '@Url.Content("~/Account/GetZipcodeShow")',
            data: '{City: "' + selectedVal + '"}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                document.getElementById('ZipCode').value = data[0];

            },
            error: function () {

            }
        });
    }
 </script>
 
 

 @* <script type="text/javascript">
      function AddNewCompany()
      {
          var CompanySelect = $("#CompanyName").val();
         // alert(CompanySelect);
         // var Comapny = CompanySelect.options[CompanySelect.selectedIndex].text;

          if (CompanySelect == "ADD NEW COMPANY")
          {
               $("#divforCounty").show();
          }
          else
          {
               $("#divforCounty").hide();
          }
       }
</script>*@




@using (Html.BeginForm())
{
 
         <div class="main_content">
           <div class="page_heading">
             <p>Edit Profile</p>
            </div>

        <div style="clear:both;">
            <br />
        </div>
             <div style="float:right; padding-right:10px;">
        <a href='@Url.Content("~/account/reset_password")'>Reset Password</a>
        </div>
        <div style="clear:both;"><br /></div>
        <div style="text-align:center;">
            <strong>
        <u>Company and Contact Information</u>
        </strong>
       
            <br />
            @*<div id="errormsg"></div>
           @*  @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")*@
         @* <span style="color:red;">   @Html.ValidationSummary(true)</span>    *@
              </div>
         <div style="clear:both;text-align:center;font-size:small;padding:10px;">
              
              <span style="color:red;">*</span><span>&nbsp;indicates required field</span>
          
        </div>
                   @Html.HiddenFor(m => m.SSN)
                @Html.HiddenFor(m => m.IsActive)

            <div class="editor-label">
              <span style="color:red;">*</span> <strong> @Html.LabelFor(m => m.FirstName):</strong>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.FirstName, new { @maxlength = "50" })
               
            </div>

            <div class="editor-label">
               <span style="color:red;">*</span> <strong>@Html.LabelFor(m => m.LastName):</strong>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LastName, new { @maxlength = "50" })
               
            </div>

        
            <div class="editor-label">
              <span style="color:red;">*</span> <strong> @Html.LabelFor(m => m.Address1):</strong>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Address1, new { @maxlength = "100" })
              
            </div>
            <div class="editor-label">
               <strong> @Html.LabelFor(m => m.Address2):</strong>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Address2, new { @maxlength = "100" })
              @* <span style="color:red;font-size:10px;"> @Html.ValidationMessageFor(m => m.Address2)</span>*@
            </div>

           
            <div class="editor-label">
               <span style="color:red;">*</span><strong> State:</strong>
            </div>
            <div class="editor-field">
               
                @Html.DropDownListFor(model => model.StateName, (IEnumerable<SelectListItem>)ViewBag.State, Model.StateName, new { onchange = "onSelectedIndexChanged()", TabIndex = "0" })
                            
                
            </div>

             <div class="editor-label">
               
               <span style="color:red;">*</span> <strong>@Html.LabelFor(m => m.City):</strong>
             
             </div>
           <div class="editor-field">
             @*  <span id="spancity">@Model.City</span>*@
                @Html.DropDownListFor(model => model.City, (IEnumerable<SelectListItem>)ViewBag.City,Model.City, new { onchange = "onSelectedIndexChangedcity()" })
                
            </div>
             
          <div class="editor-label">
               <span style="color:red;">*</span> <strong>@Html.LabelFor(m => m.Email):</strong>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email, new { @onblur = "CheckEmailAvailability()", @maxlength = "50",@disabled = true })
                
                <span id="msg" style="font-size:10px"></span>
            </div>
            
         
             <div class="editor-label">
               <span style="color:red;">*</span><strong> Work Phone:</strong>
            </div>
            <div class="editor-field">
              @Html.TextBoxFor(m => m.Phone, new { @maxlength = "10" })
             
            </div>  

               

            <br />
            

         



               <div style="clear :both;"></div>
        
          <div style="clear:both;">
          <br />
          </div>
          <div class="editor-label"> &nbsp; </div>
          <div class="editor-field">
                <input type="submit" value="SUBMIT"  id="btn_sbmt" onclick="return validation()" class="input_button" />     
          </div>

          <br />
          <br />
           <div class="editor-label"> &nbsp; </div>
          
    
        <div class="editor-field" style="color:red;font-size:12px;"> 

        
         @*  @if (Model.CompanyName != "" && Model.CompanyName == "ADD NEW COMPANY")
           {
             <span style="color:red;">  @Html.ValidationSummary(true)</span>    
           }
           else
           {
             <div id="errormsg" style="color:red;font-size:12px;"></div>
           }*@

           
           <div id="errormsg" style="color:red;font-size:12px;"></div>
           
           
      


           </div>     
              
         
    </div>
}



